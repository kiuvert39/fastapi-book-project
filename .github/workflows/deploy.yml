on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up SSH Agent
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to EC2
      env:
        EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
        EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@$51.20.55.19 << 'EOF'
        # Define the repository and app directory paths
          REPO_URL="https://github.com/kiuvert39/fastapi-book-project.git"
          APP_DIR="/home/ubuntu/fastapi-book-project"

          # Check if the directory exists, if not, clone the repository
          if [ ! -d "$APP_DIR" ]; then
            echo "Cloning repository into $APP_DIR"
            git clone $REPO_URL $APP_DIR
          else
            echo "Pulling the latest changes in $APP_DIR"
            cd $APP_DIR
            git pull origin main
          fi

          # Navigate into the project directory
          cd $APP_DIR

          # Check that we're in the right directory and the necessary files exist
          echo "Current directory: $(pwd)"
          ls -l

          # Create a virtual environment if it doesn't exist
          if [ ! -d "venv" ]; then
            echo "Creating virtual environment"
            python3 -m venv venv
          fi

          # Activate the virtual environment
          source venv/bin/activate

          # Install dependencies if requirements.txt is available
          if [ -f "requirements.txt" ]; then
            echo "Installing dependencies from requirements.txt"
            pip install --upgrade -r requirements.txt
          else
            echo "requirements.txt not found, installing fastapi and uvicorn"
            pip install fastapi uvicorn
          fi

          # Stop any existing FastAPI app
          echo "Stopping any existing FastAPI app"
          pkill -f "uvicorn"

          # Start FastAPI in the background
          echo "Starting FastAPI application"
          nohup uvicorn main:app --host 127.0.0.1 --port 8000 > fastapi_app.log 2>&1 &

          # Wait a bit to ensure the server is up
          sleep 10

          # Check if the app is running, retry a couple of times if it fails
          for i in {1..5}; do
            if curl -s http://127.0.0.1:8000; then
              echo "FastAPI app is running!"
              break
            else
              echo "FastAPI app not running, retrying... ($i/5)"
              sleep 5
            fi
          done

          # Optionally, you can tail the log file to check the app's output
          tail -f fastapi_app.log

        EOF
